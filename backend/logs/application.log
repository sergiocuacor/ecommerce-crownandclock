2025-01-19 13:38:07 [restartedMain] INFO  c.e.EcommercevcsApplication - Starting EcommercevcsApplication using Java 21.0.4 with PID 2648 (C:\Users\ADMIN\Desktop\WorkspaceCarlosSergi\proyectoDAW\backend\target\classes started by ADMIN in C:\Users\ADMIN\Desktop\WorkspaceCarlosSergi\proyectoDAW\backend)
2025-01-19 13:38:07 [restartedMain] DEBUG c.e.EcommercevcsApplication - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-01-19 13:38:07 [restartedMain] INFO  c.e.EcommercevcsApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-19 13:38:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-19 13:38:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2025-01-19 13:38:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-19 13:38:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-19 13:38:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-01-19 13:38:10 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-19 13:38:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2796 ms
2025-01-19 13:38:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-19 13:38:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-19 13:38:10 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-19 13:38:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-01-19 13:38:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn31: url=jdbc:h2:mem:testdb user=SA
2025-01-19 13:38:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-01-19 13:38:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-19 13:38:10 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-01-19 13:38:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists category cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists order_details cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists roles cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists users_roles cascade 
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table category (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(255),
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table order_details (
        quantity integer not null,
        subtotal float(53),
        unit_price float(53) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table orders (
        total float(53) not null,
        id bigint generated by default as identity,
        order_date timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','COMPLETED','PENDING','SHIPPED') not null,
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table products (
        price float(53) not null,
        stock integer not null,
        category_id bigint,
        id bigint generated by default as identity,
        description varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table roles (
        id bigint generated by default as identity,
        name varchar(255) unique,
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        id bigint generated by default as identity,
        city varchar(255),
        country varchar(255),
        email varchar(255) unique,
        first_name varchar(255),
        last_name varchar(255),
        name varchar(255),
        password varchar(255),
        phone_number varchar(255),
        postal_code varchar(255),
        state varchar(255),
        street_address varchar(255),
        primary key (id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        unique (user_id, role_id)
    )
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists order_details 
       add constraint FKjyu2qbqt8gnvno9oe9j2s2ldk 
       foreign key (order_id) 
       references orders
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists order_details 
       add constraint FK4q98utpd73imf4yhttm3w0eax 
       foreign key (product_id) 
       references products
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       add constraint FK1cf90etcu98x1e6n9aks3tel3 
       foreign key (category_id) 
       references category
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles
2025-01-19 13:38:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users
2025-01-19 13:38:11 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-19 13:38:11 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-19 13:38:11 [restartedMain] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 55da67dc-625d-46a7-9354-5a238cddf289

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-01-19 13:38:11 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-01-19 13:38:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-01-19 13:38:11 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-01-19 13:38:12 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-01-19 13:38:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-01-19 13:38:12 [restartedMain] INFO  c.e.EcommercevcsApplication - Started EcommercevcsApplication in 4.544 seconds (process running for 589.615)
2025-01-19 13:38:12 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-01-19 13:38:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-19 13:38:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-19 13:38:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users
2025-01-19 13:38:27 [http-nio-8080-exec-1] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:38:27 [http-nio-8080-exec-1] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:38:27 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/json;charset=UTF-8' is not supported]
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2025-01-19 13:38:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:41:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=4751f576edf60b3a5a9a437dbe7f5c45
2025-01-19 13:41:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=4751f576edf60b3a5a9a437dbe7f5c45
2025-01-19 13:41:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-01-19 13:41:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-01-19 13:41:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-01-19 13:41:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-01-19 13:41:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-01-19 13:41:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-01-19 13:41:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-01-19 13:41:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-01-19 13:41:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-01-19 13:41:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-01-19 13:41:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-01-19 13:41:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-01-19 13:41:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-01-19 13:41:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-01-19 13:41:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-01-19 13:41:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-01-19 13:41:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-01-19 13:41:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-01-19 13:41:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-01-19 13:41:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-01-19 13:41:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-01-19 13:41:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-01-19 13:41:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-01-19 13:41:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-01-19 13:41:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-01-19 13:41:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-01-19 13:41:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-01-19 13:41:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-01-19 13:41:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-01-19 13:41:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-01-19 13:41:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-01-19 13:41:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-01-19 13:41:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-01-19 13:41:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-01-19 13:41:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-01-19 13:41:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-01-19 13:41:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-01-19 13:41:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-01-19 13:41:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-01-19 13:41:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-01-19 13:41:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-01-19 13:41:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-01-19 13:41:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-01-19 13:41:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-01-19 13:41:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-01-19 13:41:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-01-19 13:41:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-01-19 13:41:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-01-19 13:41:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-01-19 13:41:17 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-01-19 13:41:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-01-19 13:41:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-01-19 13:41:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-01-19 13:41:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-01-19 13:41:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=c3d8ba5845f9167f70fec3945718ea82
2025-01-19 13:41:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-01-19 13:41:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-01-19 13:41:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-01-19 13:41:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        ue1_0.city,
        ue1_0.country,
        ue1_0.postal_code,
        ue1_0.state,
        ue1_0.street_address,
        ue1_0.email,
        ue1_0.enabled,
        ue1_0.first_name,
        ue1_0.last_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone_number 
    from
        users ue1_0
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:42:24 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users
2025-01-19 13:45:04 [http-nio-8080-exec-4] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:45:04 [http-nio-8080-exec-4] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:45:04 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/json;charset=UTF-8' is not supported]
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2025-01-19 13:45:04 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        ue1_0.city,
        ue1_0.country,
        ue1_0.postal_code,
        ue1_0.state,
        ue1_0.street_address,
        ue1_0.email,
        ue1_0.enabled,
        ue1_0.first_name,
        ue1_0.last_name,
        ue1_0.name,
        ue1_0.password,
        ue1_0.phone_number 
    from
        users ue1_0
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ol1_0.user_id,
        ol1_0.id,
        ol1_0.order_date,
        ol1_0.status,
        ol1_0.total 
    from
        orders ol1_0 
    where
        ol1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        od1_0.order_id,
        od1_0.id,
        od1_0.product_id,
        p1_0.id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        od1_0.quantity,
        od1_0.subtotal,
        od1_0.unit_price 
    from
        order_details od1_0 
    left join
        products p1_0 
            on p1_0.id=od1_0.product_id 
    left join
        category c1_0 
            on c1_0.id=p1_0.category_id 
    where
        od1_0.order_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users_roles r1_0 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_0.user_id=?
2025-01-19 13:46:12 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /users
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /users
2025-01-19 13:47:04 [http-nio-8080-exec-10] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:47:04 [http-nio-8080-exec-10] WARN  o.s.h.c.j.MappingJackson2HttpMessageConverter - Failed to evaluate Jackson deserialization for type [[simple type, class com.ecommercevcs.entities.UserEntity]]: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot handle managed/back reference 'defaultReference': back reference type (`java.util.List<com.ecommercevcs.entities.UserEntity>`) not compatible with managed type (com.ecommercevcs.entities.UserEntity)
2025-01-19 13:47:04 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/json;charset=UTF-8' is not supported]
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2025-01-19 13:47:04 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
